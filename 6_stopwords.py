# -*- coding: utf-8 -*-
"""stopwords.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1En-2v_iCxAAW4YAd-OfP71zhSQEBvgmv
"""

# Import libraries
from sklearn.datasets import fetch_20newsgroups
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
import nltk
import re

# Download NLTK stopwords
nltk.download('stopwords')
stop_words = set(stopwords.words('english'))
stemmer = PorterStemmer()

# Custom text preprocessing function
def preprocess(text):
    text = re.sub('[^a-zA-Z]', ' ', text)  # Remove special characters
    text = text.lower()
    words = text.split()
    words = [stemmer.stem(word) for word in words if word not in stop_words]
    return ' '.join(words)

# Load dataset
data = fetch_20newsgroups(subset='all', categories=['sci.space', 'rec.sport.baseball'])
docs = [preprocess(doc) for doc in data.data]  # Preprocess all documents

# Feature extraction using Bag of Words
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(docs)
y = data.target

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Naive Bayes classification
model = MultinomialNB()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluate precision, recall
print(classification_report(y_test, y_pred, target_names=data.target_names))